{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC1C,EAAQ,SAAS,aAAa,CAAC,MAG5B,AAwBI,EAxBC,GAAG,CAAC,SAAC,CAAjB,EACE,MAAO,CACL,KAAM,EAAQ,SAAS,CACvB,SAAU,EAAQ,OAAO,CAAC,QAAQ,CAClC,OAAQ,EAAQ,OAAO,CAAC,MAAM,CAC9B,IAAK,EAAQ,OAAO,CAAC,GAAG,AAC1B,CACF,GAkBF,AAfA,SAAkB,CAAI,CAAE,CAAE,EACxB,SAAS,EAAe,CAAG,EACzB,MAAO,CAAC,EAAI,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,GAC5C,CAMA,AAJwB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAtC,EACE,OAAO,EAAe,EAAE,OAAO,CAAC,MAAM,EAAI,EAAe,EAAE,OAAO,CAAC,MAAM,CAC3E,GAEgB,OAAO,CAAC,SAAC,CAAzB,EACE,EAAG,qBAAqB,CAAC,aAAc,EACzC,EACF,EAGS,EAAW","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar elemsList = _to_consumable_array(document.querySelectorAll(\"li\"));\nvar ulist = document.querySelector(\"ul\");\nfunction getEmployees(list) {\n    return list.map(function(element) {\n        return {\n            name: element.innerText,\n            position: element.dataset.position,\n            salary: element.dataset.salary,\n            age: element.dataset.age\n        };\n    });\n}\nfunction sortList(list, ul) {\n    function converToNumber(str) {\n        return +str.replace(\",\", \"\").replace(\"$\", \"\");\n    }\n    var sortLiForSalary = list.sort(function(a, b) {\n        return converToNumber(a.dataset.salary) - converToNumber(b.dataset.salary);\n    });\n    sortLiForSalary.forEach(function(elem) {\n        ul.insertAdjacentElement(\"afterbegin\", elem);\n    });\n}\ngetEmployees(elemsList);\nsortList(elemsList, ulist);\n\n//# sourceMappingURL=index.b0a86135.js.map\n","'use strict';\n\nconst elemsList = [...document.querySelectorAll('li')];\nconst ulist = document.querySelector('ul');\n\nfunction getEmployees(list) {\n  return list.map((element) => {\n    return {\n      name: element.innerText,\n      position: element.dataset.position,\n      salary: element.dataset.salary,\n      age: element.dataset.age,\n    };\n  });\n}\n\nfunction sortList(list, ul) {\n  function converToNumber(str) {\n    return +str.replace(',', '').replace('$', '');\n  }\n\n  const sortLiForSalary = list.sort((a, b) => {\n    return converToNumber(a.dataset.salary) - converToNumber(b.dataset.salary);\n  });\n\n  sortLiForSalary.forEach((elem) => {\n    ul.insertAdjacentElement('afterbegin', elem);\n  });\n}\n\ngetEmployees(elemsList);\nsortList(elemsList, ulist);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","elemsList","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","ulist","querySelector","list","map","element","innerText","position","dataset","salary","age","sortList","ul","converToNumber","str","replace","sortLiForSalary","sort","a","b","forEach","elem","insertAdjacentElement"],"version":3,"file":"index.b0a86135.js.map"}